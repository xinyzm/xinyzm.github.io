<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Jenkins 和 Gitlab 配合执行项目任务</title>
      <link href="/Jenkins-%E5%92%8C-Gitlab-%E9%85%8D%E5%90%88%E6%89%A7%E8%A1%8C%E9%A1%B9%E7%9B%AE%E4%BB%BB%E5%8A%A1/"/>
      <url>/Jenkins-%E5%92%8C-Gitlab-%E9%85%8D%E5%90%88%E6%89%A7%E8%A1%8C%E9%A1%B9%E7%9B%AE%E4%BB%BB%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="在-Gitlab-创建-git-项目"><a href="#在-Gitlab-创建-git-项目" class="headerlink" title="在 Gitlab 创建 git 项目"></a>在 Gitlab 创建 git 项目</h3><h3 id="使用-sshkey-命令创建一对-ssh-公私钥，用于-deploy"><a href="#使用-sshkey-命令创建一对-ssh-公私钥，用于-deploy" class="headerlink" title="使用 sshkey 命令创建一对 ssh 公私钥，用于 deploy"></a>使用 sshkey 命令创建一对 ssh 公私钥，用于 deploy</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C &quot;youremail@xxx.com&quot; -f &quot;sshkey_filename&quot;</span><br></pre></td></tr></table></figure><h3 id="在-Jenkins-中添加-ssh-私钥凭据"><a href="#在-Jenkins-中添加-ssh-私钥凭据" class="headerlink" title="在 Jenkins 中添加 ssh 私钥凭据"></a>在 Jenkins 中添加 ssh 私钥凭据</h3><p>（1）选择凭据 - 系统 - 全局凭据 - 添加凭据</p><p><img src="添加凭据-1.jpg" alt="添加凭据-1"></p><p>（2）选择类型 <strong>SSH Username with private key</strong>，填写用户名和 ssh 私钥，如果生成公私钥的时候设置了 passphrase 就填写，否则不填</p><p><img src="填写凭证-2.jpg" alt="填写凭证-2"></p><h3 id="在-Gitlab-中配置-Deploy-Keys（添加-ssh-公钥）"><a href="#在-Gitlab-中配置-Deploy-Keys（添加-ssh-公钥）" class="headerlink" title="在 Gitlab 中配置 Deploy Keys（添加 ssh 公钥）"></a>在 Gitlab 中配置 Deploy Keys（添加 ssh 公钥）</h3><p>（1） 此步骤的前提是你拥有这个 git 项目的管理权限</p><p>（2） 选择 git 项目 - 设置 - 仓库 - Deploy Keys ，填写 ssh 公钥，保存</p><p><img src="配置deploy keys.jpg" alt="配置deploy keys"></p><p>（3）激活新增的 deploy key </p><p><img src="激活deploy key.jpg" alt="激活deploy key"></p><h3 id="在-Jenkins-中新建任务"><a href="#在-Jenkins-中新建任务" class="headerlink" title="在 Jenkins 中新建任务"></a>在 Jenkins 中新建任务</h3><h3 id="配置任务-源码管理"><a href="#配置任务-源码管理" class="headerlink" title="配置任务 - 源码管理"></a>配置任务 - 源码管理</h3><p>（1） 选择 Git</p><p>（2） 设置仓库地址，仓库地址从 Gitlab 中获取</p><p>（3） 凭据选择你刚才使用 ssh 私钥添加的凭据</p><p>（4） 指定分支，建议设置成 master</p><p>（5） 如果需要部署的项目目录不是根目录，通过 Additional Behaviours -&gt; Sparse Checkout paths（安装 Git Parameter 插件） -&gt; Path 设置</p><p><img src="配置任务-源码管理.jpg" alt="配置任务-源码管理"></p><h3 id="配置任务-构建触发器"><a href="#配置任务-构建触发器" class="headerlink" title="配置任务 - 构建触发器"></a>配置任务 - 构建触发器</h3><p>（1）勾选 Build when a change is pushed to Gitlab.</p><p>（2）查看 Jenkins 的 webhooks 的地址，点击高级按钮，生成 Secret token</p><p><img src="获取webhooks地址.jpg" alt="获取webhooks地址"><img src="生成Secret token.jpg" alt="生成Secret token"></p><p>（3） 选择 git 项目 - 设置 - 集成 ，填写 Webhooks 的 URL 和 Secret Token，取消勾选 Enable SSL verification</p><p><img src="填写webhooks和token.jpg" alt="填写webhooks和token"></p><h3 id="配置任务-构建"><a href="#配置任务-构建" class="headerlink" title="配置任务 - 构建"></a>配置任务 - 构建</h3><p>（1） 增加构建步骤 - 执行 shell </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 'Hello World!'</span><br></pre></td></tr></table></figure><h3 id="在-Gitlab-进行测试"><a href="#在-Gitlab-进行测试" class="headerlink" title="在 Gitlab 进行测试"></a>在 Gitlab 进行测试</h3><p>（1）选择 git 项目 - 设置 - 集成，在新创建的 Webhooks 下，点击 Test，选择 Push events</p><p>（2） 在 Jenkins 中查看新创建的任务是否正确执行并打印 <strong>Hello World!</strong></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
